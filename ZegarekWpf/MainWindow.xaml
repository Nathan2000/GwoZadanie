<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ZegarekWpf"
        xmlns:System="clr-namespace:System;assembly=mscorlib" x:Class="ZegarekWpf.MainWindow"
        mc:Ignorable="d"
        Title="MainWindow" Height="271" Width="200" ResizeMode="CanResize">
    <Window.Resources>
        <local:RadianDegreesConverter x:Key="RadianDegreesConverter"/>
        <local:ZegarekViewModel x:Key="zegarek"/>
        <Style x:Key="clockHand" TargetType="{x:Type Line}">
            <Setter Property="Stroke" Value="Black"/>
            <Setter Property="StrokeEndLineCap" Value="Round"/>
        </Style>
        <Style x:Key="shortClockHand" BasedOn="{StaticResource clockHand}" TargetType="{x:Type Line}">
            <Setter Property="StrokeThickness" Value="4"/>
        </Style>
        <Style x:Key="longClockHand" BasedOn="{StaticResource clockHand}" TargetType="{x:Type Line}">
            <Setter Property="StrokeThickness" Value="2"/>
        </Style>
    </Window.Resources>
    <Grid DataContext="{DynamicResource zegarek}">
        <Canvas x:Name="canvas" Margin="10,10,10,58" Width="{Binding ClockFaceWidth}" Height="{Binding ClockFaceHeight}">
            <Ellipse x:Name="ellipse" Stroke="Black" Width="{Binding Clock.Diameter, Mode=OneWay}" Height="{Binding Clock.Diameter}"
                     Canvas.Left="{Binding Clock.TopLeftCorner.X}" Canvas.Top="{Binding Clock.TopLeftCorner.Y}"/>
            <Line Style="{StaticResource longClockHand}" X1="{Binding Clock.Center.X, NotifyOnSourceUpdated=True}" Y1="{Binding Clock.Center.Y, NotifyOnSourceUpdated=True}"
                  X2="{Binding Clock.LargeHandPoint.X, NotifyOnSourceUpdated=True}" Y2="{Binding Clock.LargeHandPoint.Y, NotifyOnSourceUpdated=True}"/>
            <Line Style="{StaticResource shortClockHand}" X1="{Binding Clock.Center.X, NotifyOnSourceUpdated=True}" Y1="{Binding Clock.Center.Y, NotifyOnSourceUpdated=True}"
                  X2="{Binding Clock.SmallHandPoint.X, NotifyOnSourceUpdated=True}" Y2="{Binding Clock.SmallHandPoint.Y, NotifyOnSourceUpdated=True}"/>
        </Canvas>
        <TextBlock HorizontalAlignment="Left" Margin="10,0,0,33" TextWrapping="Wrap" Text="Time:" Height="16" VerticalAlignment="Bottom"/>
        <local:TimePicker Value="{Binding Time, Mode=TwoWay}" HorizontalAlignment="Left" Margin="53,0,0,34" VerticalAlignment="Bottom" />
        <TextBlock HorizontalAlignment="Left" Margin="10,0,0,8" TextWrapping="Wrap" Text="Angle:" Height="16" VerticalAlignment="Bottom"/>
        <TextBox HorizontalAlignment="Left" Margin="53,0,0,6" TextWrapping="Wrap" Text="{Binding Clock.AngleRadians, Converter={StaticResource RadianDegreesConverter}, Mode=OneWay, StringFormat=\{0\}°}" Width="120" Height="23" VerticalAlignment="Bottom" IsReadOnly="True"/>
    </Grid>
</Window>
